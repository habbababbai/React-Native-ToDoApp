{"ast":null,"code":"var _jsxFileName = \"/Users/habbababbai/Documents/GitHub/React-Native-ToDoApp/src/components/Tile.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { galleryStyles } from \"../constans/Styles\";\n\nvar Tile = function Tile(_ref) {\n  var tileText = _ref.tileText,\n      imageSrc = _ref.imageSrc,\n      imageLeft = _ref.imageLeft;\n\n  if (imageLeft) {\n    return React.createElement(View, {\n      style: galleryStyles.tile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      }\n    }, React.createElement(Image, {\n      style: galleryStyles.tileImage,\n      resizeMode: \"contain\",\n      source: imageSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      }\n    }), React.createElement(ScrollView, {\n      style: galleryStyles.tileTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: galleryStyles.tileText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      }\n    }, tileText)));\n  } else {\n    return React.createElement(View, {\n      style: galleryStyles.tile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      }\n    }, React.createElement(View, {\n      style: galleryStyles.tileTextContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      }\n    }, React.createElement(Text, {\n      style: galleryStyles.tileText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      }\n    }, tileText)), React.createElement(Image, {\n      style: galleryStyles.tileImage,\n      resizeMode: \"contain\",\n      source: imageSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      }\n    }));\n  }\n};\n\nexport default Tile;","map":{"version":3,"sources":["/Users/habbababbai/Documents/GitHub/React-Native-ToDoApp/src/components/Tile.tsx"],"names":["React","galleryStyles","Tile","tileText","imageSrc","imageLeft","tile","tileImage","tileTextContainer"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;;;;;AAEA,SAASC,aAAT;;AAQA,IAAMC,IAAkB,GAAG,SAArBA,IAAqB,OAAqC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,SAAe,QAAfA,SAAe;;AAC5D,MAAIA,SAAJ,EAAc;AACV,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,aAAa,CAACK,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEL,aAAa,CAACM,SAA5B;AAAuC,MAAA,UAAU,EAAC,SAAlD;AAA4D,MAAA,MAAM,EAAEH,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,aAAa,CAACO,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,aAAa,CAACE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCA,QAAtC,CADJ,CAHJ,CADJ;AASH,GAVD,MAWK;AACD,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,aAAa,CAACK,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,aAAa,CAACO,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,aAAa,CAACE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCA,QAAtC,CADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,aAAa,CAACM,SAA5B;AAAuC,MAAA,UAAU,EAAC,SAAlD;AAA4D,MAAA,MAAM,EAAEH,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;AAEJ,CAvBD;;AAyBA,eAAeF,IAAf","sourcesContent":["import React, { FC } from 'react';\nimport { Text, View, Image, ImageSourcePropType, ScrollView} from 'react-native';\nimport { galleryStyles } from '../constans/Styles';\n\ninterface ITileProp {\n    tileText: string,\n    imageLeft: boolean,\n    imageSrc:ImageSourcePropType\n} \n\nconst Tile:FC<ITileProp> = ({tileText, imageSrc, imageLeft}) => {\n    if (imageLeft){\n        return (\n            <View style={galleryStyles.tile}>\n                <Image style={galleryStyles.tileImage} resizeMode='contain' source={imageSrc}></Image>\n               \n                <ScrollView style={galleryStyles.tileTextContainer}>\n                    <Text style={galleryStyles.tileText}>{tileText}</Text>\n                </ScrollView>\n            </View>\n        )\n    }\n    else {\n        return (\n            <View style={galleryStyles.tile}>\n                <View style={galleryStyles.tileTextContainer}>\n                    <Text style={galleryStyles.tileText}>{tileText}</Text>\n                </View>\n                <Image style={galleryStyles.tileImage} resizeMode='contain' source={imageSrc}></Image>\n            </View>\n        )\n    }\n    \n}\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}